---
- name: DNS Init | set up the default zone
  openstack.cloud.dns_zone:
    cloud: pbos
    state: present
    name: "{{ dns_domain }}"
    zone_type: primary
    email: "{{ pool.ptr_zone_email }}"
    description: "{{ pool.description }}"
    ttl: 86400
    timeout: 300
  delegate_to: "{{ groups['keystone'][0] }}"
  run_once: true
  ignore_errors: true

- name: DNS Init | check zone status is active
  openstack.cloud.dns_zone_info:
    cloud: pbos
    name: "{{ dns_domain }}"
  register: _zoneinfo
  until: _zoneinfo.zones[0].status == "ACTIVE"
  retries: 20
  delay: 15
  delegate_to: "{{ groups['keystone'][0] }}"
  run_once: true

- name: DNS Init | add custom records in the zone
  openstack.cloud.recordset:
    cloud: pbos
    state: present
    zone: "{{ dns_domain }}"
    name: "{{ item.name }}"
    recordset_type: "a"
    records: "{{ item.records }}"
    ttl: 86400
  delegate_to: "{{ groups['keystone'][0] }}"
  run_once: true
  loop: "{{ custom_records }}"

- name: DNS Init | add redis record in the zone if redis is installed
  openstack.cloud.recordset:
    cloud: pbos
    state: present
    zone: "{{ dns_domain }}"
    name: "redis.{{ dns_domain }}"
    recordset_type: "a"
    records: "{{ vip }}"
    ttl: 86400
  delegate_to: "{{ groups['keystone'][0] }}"
  run_once: true
  when: "'redis' in groups"

- name: DNS Init | add node records in the zone
  openstack.cloud.recordset:
    cloud: pbos
    state: present
    zone: "{{ dns_domain }}"
    name: "{{ item }}.{{ dns_domain }}"
    recordset_type: "a"
    records: "['{{ hostvars[item].ansible_host }}']"
    ttl: 86400
  delegate_to: "{{ groups['keystone'][0] }}"
  run_once: true
  loop: "{{ groups['all'] }}"
...
